# GitHub Action â€“ Black Duck Security Scan:
#     https://blackduck-dev.zoominsoftware.io/bundle/bridge/page/documentation/c_using-github-action.html
# GitHub Prerequisites:
#     https://blackduck-dev.zoominsoftware.io/bundle/bridge/page/documentation/c_github-prerequisites.html
# Additional GitHub Configuration:
#     https://blackduck-dev.zoominsoftware.io/bundle/bridge/page/documentation/c_additional-github-parameters.html
# Complete List of Bridge Arguments:
#     https://blackduck-dev.zoominsoftware.io/bundle/bridge/page/documentation/c_complete-list-of-bridge-commands.html
# Bridge CLI Download:
#     https://blackduck-dev.zoominsoftware.io/bundle/bridge/page/documentation/c_download.html
name: Black Duck Bridge CLI Scan
on:
  push:
    branches:
      - main
      - master
      - develop
      - stage
      - release
  pull_request:
    branches:
      - main
      - master
      - develop
      - stage
      - release
  workflow_dispatch: {}
jobs:
  blackducksca:
    runs-on: ubuntu-latest
    env:
      BRIDGE_BLACKDUCKSCA_URL: ${{ vars.BLACKDUCKSCA_URL }}
      BRIDGE_BLACKDUCKSCA_TOKEN: ${{ secrets.BLACKDUCKSCA_TOKEN }}
      BRIDGE_BLACKDUCKSCA_PROJECT_NAME: ${{ github.event.repository.name }}
      BRIDGE_BLACKDUCKSCA_PROJECT_VERSION: ${{ github.event.ref_name }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Download & Setup Bridge CLI
        run: |-
          BASE="https://repo.blackduck.com/bds-integrations-release/com/blackduck/integration/bridge/binaries/bridge-cli-bundle/latest"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pwsh -Command "Invoke-WebRequest $BASE/bridge-cli-bundle-win64.zip -OutFile bridge.zip; Expand-Archive bridge.zip $env:RUNNER_TEMP; echo BRIDGE_CLI=$(Get-ChildItem -Recurse $env:RUNNER_TEMP -Filter bridge-cli.exe | Select-Object -First 1) | Out-File $env:GITHUB_ENV -Append"
          else
            OS=$( [[ "$RUNNER_OS" == "macOS" ]] && ([[ $(uname -m) =~ arm ]] && echo macos_arm || echo macosx) || ([[ $(uname -m) =~ arm ]] && echo linux_arm || echo linux64 ))
            curl -sSL -o bridge.zip $BASE/bridge-cli-bundle-$OS.zip
            unzip -qo bridge.zip -d $RUNNER_TEMP
            echo BRIDGE_CLI=$(find $RUNNER_TEMP -name bridge-cli | head -n1) >> $GITHUB_ENV
          fi
      - name: Blackducksca Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        run: ${{ env.BRIDGE_CLI }} --stage blackducksca
